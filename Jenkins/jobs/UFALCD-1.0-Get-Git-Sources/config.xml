<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Download git repository from https://github.com/chenxiaolong/Unity-for-Arch-LiveCD.git</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>100</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.4-SNAPSHOT">
      <useBuildBlocker>false</useBuildBlocker>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <hudson.queueSorter.PrioritySorterJobProperty plugin="PrioritySorter@1.3">
      <priority>100</priority>
    </hudson.queueSorter.PrioritySorterJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@1.4.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name></name>
        <refspec></refspec>
        <url>https://github.com/chenxiaolong/Unity-for-Arch-LiveCD.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <clean>false</clean>
    <wipeOutWorkspace>false</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <useShallowClone>false</useShallowClone>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir></relativeTargetDir>
    <reference></reference>
    <excludedRegions></excludedRegions>
    <excludedUsers></excludedUsers>
    <gitConfigName></gitConfigName>
    <gitConfigEmail></gitConfigEmail>
    <skipTag>false</skipTag>
    <includedRegions></includedRegions>
    <scmName></scmName>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector">
    <hudson.triggers.SCMTrigger>
      <spec>* * * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

cd Packages

# If this is the first time building, then make sure that we build all of the packages
if [ ! -f ./old-commit ]; then
  git rev-list --max-count=1 HEAD &gt; old-commit
  BUILD_ALL=true
fi

git rev-list --max-count=1 HEAD &gt; new-commit

rm -f changed-packages

if [ &quot;x${BUILD_ALL}&quot; == &quot;xtrue&quot; ]; then
  CHANGED=$(ls)
else
  CHANGED=&quot;&quot;
  for i in $(git diff --name-only $(cat old-commit) $(cat new-commit) | grep &apos;/PKGBUILD&apos;); do
    i=${i%/*}
    i=${i#*/}
    CHANGED+=&quot; ${i}&quot;
  done
fi

for i in ${CHANGED}; do
  echo &quot;Package ${i} was changed, will rebuild&quot;
  PKG=&quot;${i//-/_}&quot;
  PKG=&quot;${PKG//./_}&quot;
  echo &quot;build_${PKG}=true&quot; &gt;&gt; changed-packages
done

mv new-commit old-commit</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.cloneworkspace.CloneWorkspacePublisher plugin="clone-workspace-scm@0.5">
      <workspaceGlob></workspaceGlob>
      <criteria>Any</criteria>
      <archiveMethod>TAR</archiveMethod>
      <overrideDefaultExcludes>false</overrideDefaultExcludes>
    </hudson.plugins.cloneworkspace.CloneWorkspacePublisher>
    <org.jenkins__ci.plugins.flexible__publish.FlexiblePublisher plugin="flexible-publish@0.10">
      <publishers>
        <org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
          <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition" plugin="run-condition@0.10">
            <command>cd Packages/
/srv/jenkins/in-build-list.sh py3parted</command>
          </condition>
          <publisher class="hudson.plugins.parameterizedtrigger.TriggerBuilder" plugin="parameterized-trigger@2.18">
            <configs>
              <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
                <configs class="empty-list"/>
                <projects>UFALCD-2.0-Build-py3parted</projects>
                <condition>ALWAYS</condition>
                <triggerWithNoParameters>false</triggerWithNoParameters>
                <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
              </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            </configs>
          </publisher>
          <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@0.10"/>
        </org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
        <org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
          <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition" plugin="run-condition@0.10">
            <command>cd Packages/
/srv/jenkins/in-build-list.sh cnchi</command>
          </condition>
          <publisher class="hudson.plugins.parameterizedtrigger.TriggerBuilder" plugin="parameterized-trigger@2.18">
            <configs>
              <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
                <configs class="empty-list"/>
                <projects>UFALCD-2.0-Build-cnchi</projects>
                <condition>ALWAYS</condition>
                <triggerWithNoParameters>false</triggerWithNoParameters>
                <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
              </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            </configs>
          </publisher>
          <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@0.10"/>
        </org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
        <org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
          <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition" plugin="run-condition@0.10">
            <command>cd Packages/
/srv/jenkins/in-build-list.sh pm2ml</command>
          </condition>
          <publisher class="hudson.plugins.parameterizedtrigger.TriggerBuilder" plugin="parameterized-trigger@2.18">
            <configs>
              <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
                <configs class="empty-list"/>
                <projects>UFALCD-2.0-Build-pm2ml</projects>
                <condition>ALWAYS</condition>
                <triggerWithNoParameters>false</triggerWithNoParameters>
                <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
              </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            </configs>
          </publisher>
          <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@0.10"/>
        </org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
        <org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
          <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition" plugin="run-condition@0.10">
            <command>cd Packages/
/srv/jenkins/in-build-list.sh cnchi</command>
          </condition>
          <publisher class="hudson.plugins.parameterizedtrigger.TriggerBuilder" plugin="parameterized-trigger@2.18">
            <configs>
              <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
                <configs class="empty-list"/>
                <projects>UFALCD-6.0-Update-Installation-Package-List</projects>
                <condition>ALWAYS</condition>
                <triggerWithNoParameters>false</triggerWithNoParameters>
                <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
              </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
            </configs>
          </publisher>
          <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@0.10"/>
        </org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
      </publishers>
    </org.jenkins__ci.plugins.flexible__publish.FlexiblePublisher>
  </publishers>
  <buildWrappers/>
</project>